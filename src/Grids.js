const Grids = {
	getGridPuzzle: (num) =>  {
		let retgrid; 
		switch ( num ) {                    
			case 0:          // easy 
				retgrid =   [[5, 3, 0, 0, 7, 0, 0, 0, 0],  
							[6, 0, 0, 1, 9, 5, 0, 0, 0], 
							[0, 9, 8, 0, 0, 0, 0, 6, 0], 
							[8, 0, 0, 0, 6, 0, 0, 0, 3], 
							[4, 0, 0, 8, 0, 3, 0, 0, 1], 
							[7, 0, 0, 0, 2, 0, 0, 0, 6], 
							[0, 6, 0, 0, 0, 0, 2, 8, 0], 
							[0, 0, 0, 4, 1, 9, 0, 0, 5], 
							[0, 0, 0, 0, 8, 0, 0, 7, 9]]; 
				break;
			case 1:  		// easy 
				retgrid = [
					[5,0,0,0,0,3,0,9,8],
					[9,0,0,2,0,0,0,0,7],
					[0,0,0,0,8,9,2,0,0],
					[0,0,5,8,0,0,0,1,0],
					[0,7,0,0,3,0,0,6,0],
					[0,9,0,0,0,6,8,0,0],
					[0,0,7,5,1,0,0,0,0],
					[3,0,0,0,0,8,0,0,6],
					[2,5,0,3,0,0,0,0,4]	];
				break; 
			case 2:  		// easy 
				retgrid = 	[[7,0,0,0,2,0,0,3,0],
							[0,0,9,7,0,0,0,0,6],
							[8,0,1,0,0,4,2,0,0],
							[0,9,0,3,0,0,5,0,0],
							[0,0,0,0,7,0,0,0,0],
							[0,0,7,0,0,6,0,4,0],
							[0,0,8,2,0,0,9,0,4],
							[9,0,0,0,0,1,6,0,0],
							[0,6,0,0,8,0,0,0,3]];        
				break; 		
			case 3:  		// easy 
				retgrid = [
					[0,0,6,0,3,8,0,7,0],
					[0,8,1,0,0,0,0,5,4],
					[0,0,0,0,0,4,0,0,6],
					[0,6,0,0,0,2,4,0,0],
					[7,0,0,0,6,0,0,0,3],
					[0,0,8,9,0,0,0,6,0],
					[6,0,0,8,0,0,0,0,0],
					[1,7,0,0,0,0,5,2,0],
					[0,5,0,3,2,0,6,0,0]	];
				break; 		
			case 4:  		// easy 
				retgrid = [
					[0,0,0,2,0,0,8,4,0],
					[4,0,0,0,8,5,0,9,0],
					[0,0,2,0,0,0,0,0,6],
					[1,9,0,0,0,0,4,7,0],
					[0,0,0,7,5,9,0,0,0],
					[0,7,8,0,0,0,0,6,9],
					[8,0,0,0,0,0,9,0,0],
					[0,3,0,4,2,0,0,0,7],
					[0,2,7,0,0,3,0,0,0]	];
				break; 	
			case 5:  		// easy 
				retgrid = [
					[0,0,2,0,0,0,9,6,0],
					[8,0,0,9,0,2,0,0,7],
					[0,0,6,0,0,1,0,0,2],
					[0,0,0,0,9,0,0,3,4],
					[0,0,0,1,0,4,0,0,0],
					[7,4,0,0,8,0,0,0,0],
					[3,0,0,5,0,0,4,0,0],
					[2,0,0,4,0,3,0,0,6],
					[0,1,4,0,0,0,3,0,0]	];
				break; 	
			case 6:  		// easy  
				retgrid = [
					[8,7,0,0,0,0,1,0,2],
					[0,3,0,0,8,0,0,7,0],
					[0,0,5,0,0,7,0,0,6],
					[7,0,1,0,6,0,0,4,0],
					[0,0,0,9,0,4,0,0,0],
					[0,4,0,0,7,0,2,0,5],
					[4,0,0,3,0,0,6,0,0],
					[0,6,0,0,1,0,0,5,0],
					[5,0,9,0,0,0,0,8,3] ];
				break; 						
			case 20:           // medium  [matching pairs]  
				retgrid =   [[1, 0, 0, 6, 0, 0, 9, 5, 0],  
							[0, 3, 0, 0, 8, 0, 0, 0, 0], 
							[0, 0, 5, 0, 0, 0, 0, 2, 0], 
							[8, 5, 0, 0, 6, 0, 0, 1, 0], 
							[7, 0, 9, 0, 0, 0, 0, 0, 0], 
							[0, 1, 0, 0, 0, 0, 0, 0, 0], 
							[0, 0, 0, 9, 0, 0, 8, 0, 6], 
							[0, 0, 0, 8, 5, 0, 3, 9, 0], 
							[0, 0, 0, 0, 0, 3, 0, 0, 5]];  
				break;
			case 21: 		// medium [matching pairs] 
				retgrid = 	[[4,0,0,0,1,0,0,0,0],
							[0,0,0,3,0,9,0,4,0],
							[0,7,0,0,0,5,0,0,9],
							[0,0,0,0,6,0,0,2,1],
							[0,0,4,0,7,0,6,0,0],
							[1,9,0,0,5,0,0,0,0],
							[9,0,0,4,0,0,0,7,0],
							[0,3,0,6,0,8,0,0,0],
							[0,0,0,0,3,0,0,0,6]];
				break; 
			case 22: 		// medium [??] 
				retgrid = 	[
							[0,0,0,0,0,1,6,0,2],
							[0,7,0,0,6,0,0,0,0],
							[0,8,0,5,9,0,0,0,0],
							[0,5,0,0,0,0,9,0,8],
							[0,0,3,9,0,4,7,0,0],
							[4,0,7,0,0,0,0,3,0],
							[0,0,0,0,4,9,0,2,0],
							[0,0,0,0,5,0,0,6,0],
							[9,0,1,2,0,0,0,0,0]
				];
				break; 		
			case 23: 		// medium [??] 
				retgrid = 	[
							[0,0,0,0,0,4,9,0,5],
							[0,1,0,0,9,0,0,0,0],
							[0,2,0,8,3,0,0,0,0],
							[0,8,0,0,0,0,3,0,2],
							[0,0,6,3,0,7,1,0,0],
							[7,0,1,0,0,0,0,6,0],
							[0,0,0,0,7,3,0,5,0],
							[0,0,0,0,8,0,0,9,0],
							[3,0,4,5,0,0,0,0,0]
				];
				break; 		
			case 24: 		// medium [??]
				retgrid = [
							[0,0,0,0,0,0,6,3,1],
							[0,0,0,0,4,0,0,0,8],
							[3,1,0,0,0,6,0,4,0],
							[5,0,2,0,0,0,0,9,4],
							[0,0,3,0,0,0,8,0,2],
							[0,7,0,0,0,0,3,0,6],
							[0,0,0,9,0,0,0,2,7],
							[9,2,4,6,7,0,0,8,0],
							[7,5,8,0,0,0,0,6,0]				
					]; 
					break; 
			case 40:             // hard  [ 4 corners ] 
				retgrid =   [[9, 0, 0, 0, 3, 0, 0, 0, 7],  
							[0, 0, 1, 6, 0, 2, 3, 0, 0], 
							[0, 4, 0, 0, 0, 0, 0, 2, 0], 
							[0, 8, 0, 9, 0, 5, 0, 3, 0], 
							[6, 0, 0, 0, 0, 0, 0, 0, 2], 
							[0, 7, 0, 3, 0, 6, 0, 8, 0], 
							[0, 1, 0, 0, 0, 0, 0, 5, 0], 
							[0, 0, 3, 7, 0, 4, 1, 0, 0], 
							[5, 0, 0, 0, 6, 0, 0, 0, 3]];    
				break;		
			case 41:             // hard  [ XYZ Wing? ] 
				retgrid =   [[0,8,5,0,0,0,9,0,2],
							[7,0,0,0,0,0,0,0,0],
							[2,9,4,7,6,0,0,0,5],
							[1,0,0,0,5,7,0,0,0],
							[0,0,3,0,0,0,2,0,0],
							[0,0,0,4,3,0,0,0,7],
							[4,0,0,0,2,6,7,3,1],
							[0,0,0,0,0,0,0,0,6],
							[3,0,7,0,0,0,4,2,0]];   
				break;	
			case 42: 
				retgrid = 	[[0,0,0,0,0,0,0,7,2],
							[0,0,0,3,0,0,0,0,0],
							[0,1,0,0,0,0,0,0,4],
							[6,0,5,0,0,3,0,0,0],
							[3,0,0,7,0,0,8,0,9],
							[0,0,0,0,4,0,0,0,0],
							[0,0,0,0,5,0,0,9,0],
							[0,4,3,0,0,6,0,0,0],
							[8,0,7,0,0,0,5,2,0]]; 				
			case 50: 		// very difficult ;  includes step7 (alternating chains) 
				retgrid =   [[9,0,0,0,3,1,0,6,0],
							[0,0,0,0,8,0,0,0,0],
							[7,5,0,0,0,0,9,0,0],
							[0,0,0,0,0,0,7,0,4],
							[0,0,0,3,0,4,0,0,0],
							[8,0,2,0,0,0,0,0,0],
							[0,0,3,0,0,0,0,8,1],
							[0,0,0,0,6,0,0,0,0],
							[0,1,0,7,5,0,0,0,3]];
				break; 
			case 51:  		//very difficult 
				retgrid = 	[[0,0,2,0,4,0,0,0,0],
							[0,0,0,0,1,7,0,6,4],
							[7,8,0,0,0,3,0,0,1],
							[9,0,5,0,0,0,0,4,0],
							[0,0,6,0,0,0,3,0,0],
							[0,4,0,0,0,0,5,0,7],
							[4,0,0,1,0,0,0,2,8],
							[3,2,0,7,9,0,0,0,0],
							[0,0,0,0,2,0,4,0,0]];        
				break; 
			case 52:  		//very difficult  Y-wing 				
				retgrid =	[[9,0,0,0,4,0,0,0,0],
							[0,0,0,6,0,0,0,3,1],
							[0,2,0,0,0,0,0,9,0],
							[0,0,0,7,0,0,0,2,0],
							[0,0,2,9,3,5,6,0,0],
							[0,7,0,0,0,2,0,0,0],
							[0,6,0,0,0,0,0,7,3],
							[5,1,0,0,0,9,0,0,0],
							[0,0,0,0,8,0,0,0,9]];
				break; 
			case 53:  		//very difficult  XYZ-wing 				
				retgrid =	[[6,0,0,0,0,0,0,0,8],
							[5,0,0,9,0,8,0,0,7],
							[8,2,0,0,0,1,0,3,0],
							[3,4,0,2,0,9,0,8,0],
							[2,0,0,0,8,0,3,0,0],
							[1,8,0,3,0,7,0,2,5],
							[7,5,0,4,0,0,0,9,2],
							[9,0,0,0,0,5,0,0,4],
							[4,0,0,0,9,0,0,0,3]];
				break; 		
			case 54:  		//hard  easy except for Y-wing 2 box/col match 				
				retgrid =	[[6,0,0,0,0,0,0,0,2],
							[2,0,8,0,0,0,4,0,0],
							[0,0,0,5,2,0,8,9,6],
							[0,3,0,0,8,0,0,5,7],
							[0,0,0,0,6,0,0,0,0],
							[7,2,0,0,9,0,0,8,0],
							[5,7,4,0,1,2,0,0,0],
							[0,0,2,0,0,0,7,0,1],
							[8,0,0,0,0,0,0,0,9]];
				break; 	
			case 59:  		//very difficult  Worlds Most Difficult?? 				
				retgrid =	[[8,0,0,0,0,0,0,0,0],
							[0,0,3,6,0,0,0,0,0],
							[0,7,0,0,9,0,2,0,0],
							[0,5,0,0,0,7,0,0,0],
							[0,0,0,0,4,5,7,0,0],
							[0,0,0,1,0,0,0,3,0],
							[0,0,1,0,0,0,0,6,8],
							[0,0,8,5,0,0,0,1,0],
							[0,9,0,0,0,0,4,0,0]];
				break; 	
			case 60:             // impossible 
				retgrid =   [[5, 0, 0, 0, 0, 0, 4, 1, 0],  
							[0, 3, 8, 0, 1, 0, 0, 7, 0], 
							[0, 0, 0, 0, 0, 0, 0, 0, 3], 
							[0, 0, 2, 0, 8, 4, 0, 0, 0], 
							[0, 0, 0, 0, 0, 0, 0, 0, 0], 
							[0, 7, 9, 0, 3, 0, 2, 0, 1], 
							[0, 0, 0, 1, 0, 0, 0, 6, 0], 
							[0, 0, 7, 0, 0, 8, 9, 4, 0], 
							[0, 0, 0, 0, 7, 0, 0, 5, 0]];  
				break;
			case 1000:             // 4x4 
				retgrid =  [[ 0,  0,  0,  0, 16,  0, 14,  0,  4, 13,  0,  0,  0,  0,  0,  0],  
							[ 7,  0, 16, 15,  0,  9,  0,  0,  0,  0,  0, 14,  4,  3,  0, 13],
							[ 3, 12,  0,  0, 13,  0,  0,  0,  9,  0,  0,  0,  0,  0, 16, 11],
							[14,  0,  4,  0, 11,  3,  0, 10, 16,  0,  6,  0,  0,  0,  0,  9],
							[ 0,  0, 10, 16,  0,  8,  0,  0,  3,  0,  0,  0,  1,  4,  0, 15],
							[ 0,  2,  0,  0,  7,  0,  4,  0,  8,  5,  0,  0,  0, 12, 13,  0],
							[ 0,  0, 13,  0,  0, 10,  0,  0, 15,  0,  2,  0,  7,  0,  0,  0],
							[ 0,  0,  3,  7,  6,  5, 15,  0,  0,  1,  0, 11,  0,  0,  2,  0],
							[ 0,  3,  0,  0,  4,  0,  1,  0,  0,  2, 16, 15,  5, 10,  0,  0],
							[ 0,  0,  0,  5,  0, 16,  0,  7,  0,  0, 11,  0,  0, 15,  0,  0],
							[ 0, 10,  7,  0,  0,  0,  8, 14,  0,  9,  0,  4,  0,  0,  6,  0],
							[11,  0, 12,  4,  0,  0,  0,  9,  0,  0,  8,  0, 13, 16,  0,  0],
							[ 4,  0,  0,  0,  0,  6,  0,  8, 11,  0, 13,  2,  0,  1,  0,  5],
							[ 1,  7,  0,  0,  0,  0,  0, 12,  0,  0,  0,  9,  0,  0, 10, 14],
							[13,  0,  5, 12, 14,  0,  0,  0,  0,  0, 15,  0,  2, 11,  0,  6],
							[ 0,  0,  0,  0,  0,  0,  3, 13,  0, 12,  0,  8,  0,  0,  0,  0]
				];  
				break;			
			case 1001:
				retgrid =  [[ 0,  8,  0,  1,  0,  0, 13,  2,  0, 15,  0,  0, 10,  0,  9,  0],
							[10,  0, 12, 14,  0,  0,  0,  1,  0,  0,  2,  0, 13,  0,  0,  4],
							[ 5,  0,  0,  0,  0,  0,  0,  4,  3, 12,  8, 14,  2,  0,  0,  1],
							[ 0,  0,  2,  0,  8, 15,  0,  0,  0, 13,  0,  0,  0,  0, 11,  0],
							[ 1,  0,  0,  0,  0,  4,  6,  3, 12,  5,  9,  0, 16,  0,  0,  0],
							[13,  5,  0,  0,  0,  0, 16,  0,  7,  0,  0,  0,  0,  1,  0,  6],
							[ 0, 14,  9,  0,  7,  0,  0,  0,  4,  0,  0, 16,  0, 15, 12,  0],
							[ 0, 10,  0,  0,  0,  1, 15,  0,  0,  0,  0,  0,  7,  0,  0, 14],
							[ 8,  0,  0, 10,  0,  0,  0,  0,  0,  9, 12,  0,  0,  0,  1,  0],
							[ 0,  1, 16,  0, 11,  0,  0, 14,  0,  0,  0,  2,  0,  3,  8,  0],
							[ 7,  0,  5,  0,  0,  0,  0, 12,  0, 11,  0,  0,  0,  0, 13, 10],
							[ 0,  0,  0, 11,  0,  7,  8, 16, 10,  6,  5,  0,  0,  0,  0,  2],
							[ 0,  9,  0,  0,  0,  0,  7,  0,  0,  0, 11, 12,  0,  4,  0,  0],
							[15,  0,  0, 16,  3,  2,  4,  5,  6,  0,  0,  0,  0,  0,  0,  9],
							[11,  0,  0,  7,  0,  9,  0,  0,  5,  0,  0,  0,  3,  2,  0,  8],
							[ 0,  3,  0,  5,  0,  0, 11,  0, 16,  4,  0,  0,  1,  0,  6,  0]
				];
				break; 
			default:             // empty 
				retgrid =   [[0, 0, 0, 0, 0, 0, 0, 0, 0],  
							[0, 0, 0, 0, 0, 0, 0, 0, 0], 
							[0, 0, 0, 0, 0, 0, 0, 0, 0], 
							[0, 0, 0, 0, 0, 0, 0, 0, 0], 
							[0, 0, 0, 0, 0, 0, 0, 0, 0], 
							[0, 0, 0, 0, 0, 0, 0, 0, 0],
							[0, 0, 0, 0, 0, 0, 0, 0, 0],
							[0, 0, 0, 0, 0, 0, 0, 0, 0],
							[0, 0, 0, 0, 0, 0, 0, 0, 0]]; 
				break;                      
		}       
		return retgrid; 
	}, 

	getGridSolution: (num) =>  {
		let retgrid; 
		switch ( num ) {                    
			case 1000:          // 4 x 4 
				retgrid =   [
					[ 9,  8, 11, 10, 16,  1, 14,  5,  4, 13,  7,  3, 12,  6, 15,  2],
					[ 7,  5, 16, 15,  8,  9, 12,  6,  2, 11, 10, 14,  4,  3,  1, 13],
					[ 3, 12,  2,  6, 13,  4,  7, 15,  9,  8,  1,  5, 10, 14, 16, 11],
					[14, 13,  4,  1, 11,  3,  2, 10, 16, 15,  6, 12,  8,  5,  7,  9],
					[ 5,  9, 10, 16, 12,  8, 13,  2,  3,  6, 14,  7,  1,  4, 11, 15],
					[15,  2,  1, 11,  7, 14,  4,  3,  8,  5,  9, 10,  6, 12, 13, 16],
					[12,  6, 13, 14,  9, 10, 11,  1, 15,  4,  2, 16,  7,  8,  5,  3],
					[ 8,  4,  3,  7,  6,  5, 15, 16, 13,  1, 12, 11, 14,  9,  2, 10],
					[ 6,  3,  8,  9,  4, 13,  1, 11,  7,  2, 16, 15,  5, 10, 14, 12],
					[ 2,  1, 14,  5,  3, 16,  6,  7, 12, 10, 11, 13,  9, 15,  4,  8],
					[16, 10,  7, 13, 15, 12,  8, 14,  5,  9,  3,  4, 11,  2,  6,  1],
					[11, 15, 12,  4,  5,  2, 10,  9,  1, 14,  8,  6, 13, 16,  3,  7],
					[ 4, 14,  9,  3, 10,  6, 16,  8, 11,  7, 13,  2, 15,  1, 12,  5],
					[ 1,  7, 15,  8,  2, 11,  5, 12,  6, 16,  4,  9,  3, 13, 10, 14],
					[13, 16,  5, 12, 14,  7,  9,  4, 10,  3, 15,  1,  2, 11,  8,  6],
					[10, 11,  6,  2,  1, 15,  3, 13, 14, 12,  5,  8, 16,  7,  9,  4]
				]; 
				break;
			case 1001:
				retgrid =  [[ 3,  8,  7,  1,  5, 12, 13,  2, 11, 15,  6,  4, 10, 14,  9, 16],
							[10, 15, 12, 14,  6, 11,  3,  1,  9, 16,  2,  7, 13,  8,  5,  4],
							[ 5, 11,  6, 13, 10, 16,  9,  4,  3, 12,  8, 14,  2,  7, 15,  1],
							[ 9, 16,  2,  4,  8, 15, 14,  7,  1, 13, 10,  5, 12,  6, 11,  3],
							[ 1,  7, 15,  8, 14,  4,  6,  3, 12,  5,  9, 11, 16, 10,  2, 13],
							[13,  5,  4,  2, 12,  8, 16, 11,  7, 10, 14, 15,  9,  1,  3,  6],
							[ 6, 14,  9,  3,  7,  5,  2, 10,  4,  1, 13, 16,  8, 15, 12, 11],
							[16, 10, 11, 12, 13,  1, 15,  9,  8,  2,  3,  6,  7,  5,  4, 14],
							[ 8,  2, 14, 10,  4,  6,  5, 15, 13,  9, 12,  3, 11, 16,  1,  7],
							[12,  1, 16,  9, 11, 13, 10, 14, 15,  7,  4,  2,  6,  3,  8,  5],
							[ 7,  6,  5, 15,  2,  3,  1, 12, 14, 11, 16,  8,  4,  9, 13, 10],
							[ 4, 13,  3, 11,  9,  7,  8, 16, 10,  6,  5,  1, 15, 12, 14,  2],
							[14,  9,  8,  6,  1, 10,  7, 13,  2,  3, 11, 12,  5,  4, 16, 15],
							[15, 12, 13, 16,  3,  2,  4,  5,  6,  8,  1, 10, 14, 11,  7,  9],
							[11,  4,  1,  7, 16,  9, 12,  6,  5, 14, 15, 13,  3,  2, 10,  8],
							[ 2,  3, 10,  5, 15, 14, 11,  8, 16,  4,  7,  9,  1, 13,  6, 12]
				];
				break; 				
			default:             // empty 
				retgrid =  []; 
				break;            				
		}
		return retgrid; 
	}
}

// export { getGridPuzzle, getGridSolution }
export { Grids as default }


